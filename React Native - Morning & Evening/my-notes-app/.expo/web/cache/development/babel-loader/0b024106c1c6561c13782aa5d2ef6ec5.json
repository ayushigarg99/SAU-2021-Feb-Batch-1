{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prade\\\\OneDrive\\\\Desktop\\\\Spring AU\\\\React Native - Morning & Evening\\\\my-notes-app\\\\components\\\\addNewNote.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar AddNewNote = function AddNewNote(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      noteTitle = _useState2[0],\n      setNoteTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      noteContent = _useState4[0],\n      setNoteContent = _useState4[1];\n\n  var submitNote = function submitNote() {\n    var newNote, notesList, noteId;\n    return _regeneratorRuntime.async(function submitNote$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newNote = {\n              \"title\": noteTitle,\n              \"content\": noteContent\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"notesList\"));\n\n          case 3:\n            notesList = _context.sent;\n            notesList = JSON.parse(notesList);\n\n            if (notesList === null) {\n              notesList = [{\n                id: \"1\",\n                note: newNote\n              }];\n            } else {\n              noteId = notesList.length + 1;\n              notesList.push({\n                id: noteId,\n                note: newNote\n              });\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notesList', JSON.stringify(notesList)));\n\n          case 8:\n            navigation.goBack();\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.titleTextStyle,\n    placeholder: \"Title\",\n    onChangeText: setNoteTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    multiline: true,\n    style: styles.contentTextStyle,\n    placeholder: \"Description\",\n    onChangeText: setNoteContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.btn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    title: \"Add Note\",\n    onPress: submitNote,\n    style: styles.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Add Note\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: Dimensions.get(\"window\").height * 0.8,\n    width: Dimensions.get('window').width * 0.9,\n    justifyContent: \"flex-start\",\n    alignSelf: \"center\"\n  },\n  titleTextStyle: {\n    fontSize: 23,\n    fontWeight: \"bold\",\n    borderColor: \"black\",\n    borderWidth: 3,\n    borderRadius: 10,\n    padding: 10,\n    width: \"95%\",\n    marginTop: 20,\n    backgroundColor: \"#dfe7f5\",\n    marginLeft: 10\n  },\n  contentTextStyle: {\n    borderColor: \"black\",\n    borderWidth: 3,\n    borderRadius: 10,\n    fontSize: 18,\n    padding: 5,\n    width: \"95%\",\n    height: Dimensions.get('window').height * 0.3,\n    marginVertical: 10,\n    backgroundColor: \"#dfe7f5\"\n  },\n  btn: {\n    alignContent: \"center\",\n    alignSelf: \"center\",\n    padding: 20,\n    margin: 3,\n    backgroundColor: '#0ba6ff',\n    borderRadius: 60,\n    width: Dimensions.get('window').width * 0.5\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 20\n  }\n});\nexport default AddNewNote;","map":{"version":3,"sources":["C:/Users/prade/OneDrive/Desktop/Spring AU/React Native - Morning & Evening/my-notes-app/components/addNewNote.js"],"names":["React","useState","AsyncStorage","AddNewNote","navigation","noteTitle","setNoteTitle","noteContent","setNoteContent","submitNote","newNote","getItem","notesList","JSON","parse","id","note","noteId","length","push","setItem","stringify","goBack","styles","container","titleTextStyle","contentTextStyle","btn","btnText","StyleSheet","create","height","Dimensions","get","width","justifyContent","alignSelf","fontSize","fontWeight","borderColor","borderWidth","borderRadius","padding","marginTop","backgroundColor","marginLeft","marginVertical","alignContent","margin","color","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text,TextInput, View,Button } from \"react-native\";\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Dimensions } from 'react-native';\r\n\r\nconst AddNewNote = ({ navigation }) => {\r\n    const [noteTitle, setNoteTitle] = useState(\"\");\r\n    const [noteContent, setNoteContent] = useState(\"\");\r\n\r\n    const submitNote = async () => {\r\n        var newNote = {\r\n            \"title\": noteTitle,\r\n            \"content\": noteContent\r\n        }\r\n        var notesList = await AsyncStorage.getItem(\"notesList\");\r\n        notesList = JSON.parse(notesList);\r\n        if (notesList === null) {\r\n            notesList = [\r\n                {\r\n                    id: \"1\",\r\n                    note: newNote,\r\n                }\r\n            ]\r\n        } else {\r\n            let noteId = notesList.length + 1;\r\n            notesList.push(\r\n                {\r\n                    id: noteId,\r\n                    note: newNote,\r\n                }\r\n            )\r\n        }\r\n        await AsyncStorage.setItem('notesList', JSON.stringify(notesList));\r\n        navigation.goBack();\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <TextInput style={styles.titleTextStyle} placeholder=\"Title\" onChangeText={setNoteTitle} />\r\n            <TextInput multiline style={styles.contentTextStyle} placeholder=\"Description\" onChangeText={setNoteContent} />\r\n            <View style={styles.btn}>\r\n            <Text title=\"Add Note\" onPress={submitNote} style={styles.btnText}>Add Note</Text>\r\n            </View>\r\n            \r\n\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: Dimensions.get(\"window\").height * 0.8,\r\n        width: Dimensions.get('window').width * 0.9,\r\n        justifyContent: \"flex-start\",\r\n        alignSelf: \"center\"\r\n    },\r\n    titleTextStyle: {\r\n        fontSize: 23,\r\n        fontWeight: \"bold\",\r\n        borderColor: \"black\",\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        width: \"95%\",\r\n        marginTop:20,\r\n        backgroundColor:\"#dfe7f5\",\r\n        marginLeft:10\r\n    },\r\n    contentTextStyle: {\r\n        borderColor: \"black\",\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n        fontSize: 18,\r\n        padding: 5,\r\n        width: \"95%\",\r\n        height:Dimensions.get('window').height * 0.3,\r\n        marginVertical: 10,\r\n        backgroundColor:\"#dfe7f5\",\r\n    },\r\n\r\n    btn: {\r\n        alignContent:\"center\",\r\n        alignSelf:\"center\",\r\n        padding: 20,\r\n        margin: 3,\r\n        backgroundColor: '#0ba6ff',\r\n        borderRadius: 60,\r\n        width: Dimensions.get('window').width * 0.5,\r\n    },\r\n    btnText: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        fontSize:20\r\n    }\r\n});\r\n\r\nexport default AddNewNote;"]},"metadata":{},"sourceType":"module"}