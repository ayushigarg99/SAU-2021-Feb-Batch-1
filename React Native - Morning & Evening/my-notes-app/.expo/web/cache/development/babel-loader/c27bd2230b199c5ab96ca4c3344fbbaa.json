{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prade\\\\OneDrive\\\\Desktop\\\\Spring AU\\\\React Native - Morning & Evening\\\\my-notes-app\\\\components\\\\login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var checkAuth = function checkAuth() {\n    var currentUser;\n    return _regeneratorRuntime.async(function checkAuth$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userName\"));\n\n          case 2:\n            currentUser = _context.sent;\n            console.log(currentUser);\n\n            if (currentUser) {\n              navigation.reset({\n                index: 0,\n                routes: [{\n                  name: \"list-notes\"\n                }]\n              });\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    checkAuth();\n  }, []);\n\n  var login = function login() {\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userName\", userName));\n\n          case 2:\n            console.log(\"Ayushi\");\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: \"list-notes\"\n              }]\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.loginTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setUserName(text);\n    },\n    style: styles.textInputStyle,\n    placeholder: \"enter username...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInputStyle,\n    placeholder: \"enter password...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.btn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Log in\",\n    onPress: login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    justifyContent: 'flex-start',\n    alignSelf: 'center'\n  },\n  textInputStyle: {\n    borderColor: \"black\",\n    borderWidth: 2,\n    borderRadius: 0,\n    fontSize: 30,\n    padding: 5,\n    width: \"100%\",\n    marginBottom: 20\n  },\n  loginTextStyle: {\n    paddingLeft: 50,\n    paddingBottom: 40,\n    fontSize: 50,\n    fontWeight: \"bold\",\n    marginVertical: 20,\n    justifyContent: 'center',\n    color: 'black'\n  },\n  btn: {\n    padding: 5,\n    margin: 3,\n    backgroundColor: '#2196F3',\n    borderRadius: 16,\n    width: \"60%\",\n    alignSelf: \"center\"\n  },\n  btnText: {\n    color: \"black\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/prade/OneDrive/Desktop/Spring AU/React Native - Morning & Evening/my-notes-app/components/login.js"],"names":["React","useState","useEffect","AsyncStorage","Login","navigation","userName","setUserName","checkAuth","getItem","currentUser","console","log","reset","index","routes","name","login","setItem","styles","container","loginTextStyle","text","textInputStyle","btn","StyleSheet","create","height","justifyContent","alignSelf","borderColor","borderWidth","borderRadius","fontSize","padding","width","marginBottom","paddingLeft","paddingBottom","fontWeight","marginVertical","color","margin","backgroundColor","btnText","textAlign"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBAEEJ,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAEvBK,QAFuB;AAAA,MAEbC,WAFa;;AAI9B,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYL,YAAY,CAACM,OAAb,CAAqB,UAArB,CADZ;;AAAA;AACRC,YAAAA,WADQ;AAEdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AACA,gBAAIA,WAAJ,EAAiB;AACTL,cAAAA,UAAU,CAACQ,KAAX,CAAiB;AACjBC,gBAAAA,KAAK,EAAE,CADU;AAEjBC,gBAAAA,MAAM,EAAE,CAAC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAD;AAFS,eAAjB;AAKP;;AATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAaAd,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMS,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACJd,YAAY,CAACe,OAAb,CAAqB,UAArB,EAAiCZ,QAAjC,CADI;;AAAA;AAEVK,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAP,YAAAA,UAAU,CAACQ,KAAX,CAAiB;AACbC,cAAAA,KAAK,EAAE,CADM;AAEbC,cAAAA,MAAM,EAAE,CAAC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAD;AAFK,aAAjB;;AAHU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAQA,SAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAASf,WAAW,CAACe,IAAD,CAApB;AAAA,KAAzB;AAAqD,IAAA,KAAK,EAAEH,MAAM,CAACI,cAAnE;AAAmF,IAAA,WAAW,EAAC,mBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,MAAM,CAACI,cAAzB;AAAyC,IAAA,WAAW,EAAC,mBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAEP,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJJ,CAHJ;AAaH,CA1CD;;AA4CA,IAAME,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,MAAM,EAAE,MADD;AAEPC,IAAAA,cAAc,EAAE,YAFT;AAGPC,IAAAA,SAAS,EAAE;AAHJ,GADkB;AAM7BN,EAAAA,cAAc,EAAE;AACZO,IAAAA,WAAW,EAAE,OADD;AAEZC,IAAAA,WAAW,EAAE,CAFD;AAGZC,IAAAA,YAAY,EAAC,CAHD;AAIZC,IAAAA,QAAQ,EAAE,EAJE;AAKZC,IAAAA,OAAO,EAAE,CALG;AAMZC,IAAAA,KAAK,EAAE,MANK;AAOZC,IAAAA,YAAY,EAAE;AAPF,GANa;AAgB7Bf,EAAAA,cAAc,EAAE;AACZgB,IAAAA,WAAW,EAAC,EADA;AAEZC,IAAAA,aAAa,EAAC,EAFF;AAGZL,IAAAA,QAAQ,EAAE,EAHE;AAIZM,IAAAA,UAAU,EAAE,MAJA;AAKZC,IAAAA,cAAc,EAAE,EALJ;AAMZZ,IAAAA,cAAc,EAAC,QANH;AAOZa,IAAAA,KAAK,EAAC;AAPM,GAhBa;AAyB7BjB,EAAAA,GAAG,EAAE;AACDU,IAAAA,OAAO,EAAE,CADR;AAEDQ,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,eAAe,EAAE,SAHhB;AAIDX,IAAAA,YAAY,EAAE,EAJb;AAKDG,IAAAA,KAAK,EAAE,KALN;AAMDN,IAAAA,SAAS,EAAE;AANV,GAzBwB;AAiC7Be,EAAAA,OAAO,EAAE;AACLH,IAAAA,KAAK,EAAE,OADF;AAELF,IAAAA,UAAU,EAAE,MAFP;AAGLM,IAAAA,SAAS,EAAE;AAHN;AAjCoB,CAAlB,CAAf;AAwCA,eAAezC,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, TextInput, Text,Button } from \"react-native\";\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { StyleSheet } from \"react-native\";\r\n\r\n\r\nconst Login = ({ navigation }) => {\r\n\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    const checkAuth = async () => {\r\n        const currentUser = await AsyncStorage.getItem(\"userName\");\r\n        console.log(currentUser);\r\n        if (currentUser) {\r\n                navigation.reset({\r\n                index: 0,\r\n                routes: [{ name: \"list-notes\" }],\r\n            });\r\n            \r\n        }\r\n        return;\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkAuth();\r\n    }, []);\r\n\r\n    const login = async () => {\r\n        await AsyncStorage.setItem(\"userName\", userName);\r\n        console.log(\"Ayushi\");\r\n        navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: \"list-notes\" }],\r\n        });\r\n    }\r\n    return (\r\n        \r\n\r\n        <View style={styles.container}>\r\n            <Text style={styles.loginTextStyle}>Login</Text>\r\n            <TextInput onChangeText={(text)=> setUserName(text)} style={styles.textInputStyle} placeholder=\"enter username...\"/>\r\n            <TextInput style={styles.textInputStyle} placeholder=\"enter password...\"/>\r\n            <View style={styles.btn}>\r\n            <Button title=\"Log in\" onPress={login} />\r\n            </View>\r\n            \r\n        </View>\r\n    )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: \"100%\",\r\n        justifyContent: 'flex-start',\r\n        alignSelf: 'center',\r\n    },\r\n    textInputStyle: {\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n        borderRadius:0,\r\n        fontSize: 30,\r\n        padding: 5,\r\n        width: \"100%\",\r\n        marginBottom: 20,\r\n\r\n    },\r\n    loginTextStyle: {\r\n        paddingLeft:50,\r\n        paddingBottom:40,\r\n        fontSize: 50,\r\n        fontWeight: \"bold\",\r\n        marginVertical: 20,\r\n        justifyContent:'center',\r\n        color:'black'\r\n    },\r\n    btn: {\r\n        padding: 5,\r\n        margin: 3,\r\n        backgroundColor: '#2196F3',\r\n        borderRadius: 16,\r\n        width: \"60%\",\r\n        alignSelf: \"center\",\r\n    },\r\n    btnText: {\r\n        color: \"black\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}