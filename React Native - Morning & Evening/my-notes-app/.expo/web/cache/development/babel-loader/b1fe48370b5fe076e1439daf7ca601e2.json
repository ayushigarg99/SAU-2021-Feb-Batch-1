{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prade\\\\OneDrive\\\\Desktop\\\\Spring AU\\\\React Native - Morning & Evening\\\\my-notes-app\\\\components\\\\listNotes.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { Note } from \"./note\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar ListNotes = function ListNotes(_ref) {\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notesList = _useState2[0],\n      setNotesList = _useState2[1];\n\n  var addNotes = function addNotes() {\n    console.log(\"List of Notes\");\n    navigation.navigate(\"add-notes\");\n  };\n\n  var fetchNotes = function fetchNotes() {\n    var notes;\n    return _regeneratorRuntime.async(function fetchNotes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"notesList\"));\n\n          case 2:\n            notes = _context.sent;\n            console.log(notes);\n\n            if (notes !== null) {\n              notes = JSON.parse(notes);\n            }\n\n            setNotesList(notes);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchNotes();\n  }, [isFocused]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, notesList ? React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, notesList.map(function (el, idx) {\n    return React.createElement(Note, {\n      id: idx,\n      noteData: el,\n      navigation: navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    });\n  })) : React.createElement(View, {\n    styles: styles.noNotesContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.noNotesSpacer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: styles.noNotesText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"No Notes Currently\")), React.createElement(View, {\n    style: styles.floatingButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Add Note\",\n    action: addNotes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: Dimensions.get(\"window\").height\n  },\n  scrollView: {\n    marginBottom: Dimensions.get(\"window\").height * 0.01\n  },\n  floatingButton: {\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  btn: {\n    position: 'absolute',\n    width: 50,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 30,\n    bottom: 30\n  },\n  btnText: {\n    color: \"blue\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  FloatingButtonStyle: {\n    resizeMode: 'contain',\n    width: 50,\n    height: 50\n  },\n  lineStyle: {\n    borderWidth: 0.5,\n    borderColor: 'black',\n    margin: 10\n  },\n  noNotesContainer: {\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignSelf: \"center\"\n  },\n  noNotesText: {\n    paddingTop: Dimensions.get(\"window\").height * 0.3,\n    color: \"blue\",\n    fontSize: 30,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  btn: {\n    alignContent: \"center\",\n    alignSelf: \"center\",\n    padding: 20,\n    margin: 3,\n    backgroundColor: '#0ba6ff',\n    borderRadius: 60,\n    width: Dimensions.get('window').width * 0.5,\n    marginBottom: 20\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 20\n  }\n});\nexport default ListNotes;","map":{"version":3,"sources":["C:/Users/prade/OneDrive/Desktop/Spring AU/React Native - Morning & Evening/my-notes-app/components/listNotes.js"],"names":["React","useEffect","useState","AsyncStorage","useIsFocused","Note","ListNotes","navigation","isFocused","notesList","setNotesList","addNotes","console","log","navigate","fetchNotes","getItem","notes","JSON","parse","styles","container","scrollView","map","el","idx","noNotesContainer","noNotesSpacer","noNotesText","floatingButton","StyleSheet","create","flex","height","Dimensions","get","marginBottom","justifyContent","btn","position","width","alignItems","right","bottom","btnText","color","fontWeight","textAlign","FloatingButtonStyle","resizeMode","lineStyle","borderWidth","borderColor","margin","alignSelf","paddingTop","fontSize","alignContent","padding","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, ScrollView, Text,Button} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { Note } from \"./note\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Dimensions } from \"react-native\";\r\n\r\nconst ListNotes = ({ navigation }) => {\r\n    const isFocused = useIsFocused();\r\n    const [notesList, setNotesList] = useState([]);\r\n    const addNotes = () => {\r\n        console.log(\"List of Notes\");\r\n        navigation.navigate(\"add-notes\");\r\n    }\r\n    const fetchNotes = async () => {\r\n        var notes = await AsyncStorage.getItem(\"notesList\");\r\n        console.log(notes);\r\n        if (notes !== null) {\r\n            notes = JSON.parse(notes);\r\n        }\r\n\r\n        setNotesList(notes);\r\n\r\n    }\r\n    useEffect(() => {\r\n        fetchNotes();\r\n    }, [isFocused])\r\n    return (\r\n\r\n        <View style={styles.container}>\r\n\r\n\r\n\r\n\r\n            {\r\n                notesList ?\r\n                    <ScrollView style={styles.scrollView}>\r\n                        {\r\n                            (notesList.map((el, idx) =>\r\n                            \r\n                                <Note id={idx} noteData={el} navigation={navigation}/>\r\n                                \r\n                            ))\r\n                        }\r\n                    </ScrollView>\r\n                    :\r\n                    <View styles={styles.noNotesContainer}>\r\n                        <Text style={styles.noNotesSpacer}></Text>\r\n                        <Text style={styles.noNotesText}>\r\n                            No Notes Currently\r\n                            </Text>\r\n                    </View>\r\n            }\r\n            <View style={styles.floatingButton}>\r\n                <View>\r\n                    <Button title=\"Add Note\" action={addNotes} />\r\n                </View>\r\n            </View>\r\n           \r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        height: Dimensions.get(\"window\").height,\r\n    },\r\n    scrollView: {\r\n        marginBottom: Dimensions.get(\"window\").height * 0.01\r\n    },\r\n    floatingButton: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end'\r\n    },\r\n    btn: {\r\n        position: 'absolute',\r\n        width: 50,\r\n        height: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        right: 30,\r\n        bottom: 30,\r\n    },\r\n    btnText: {\r\n        color: \"blue\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\"\r\n    },\r\n    FloatingButtonStyle: {\r\n        resizeMode: 'contain',\r\n        width: 50,\r\n        height: 50,\r\n    },\r\n    lineStyle: {\r\n        borderWidth: 0.5,\r\n        borderColor: 'black',\r\n        margin: 10,\r\n    },\r\n    noNotesContainer: {\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignSelf: \"center\",\r\n    },\r\n    noNotesText: {\r\n        paddingTop: Dimensions.get(\"window\").height*0.3,\r\n        color: \"blue\",\r\n        fontSize:30,\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\"\r\n    },\r\n    btn: {\r\n        alignContent:\"center\",\r\n        alignSelf:\"center\",\r\n        padding: 20,\r\n        margin: 3,\r\n        backgroundColor: '#0ba6ff',\r\n        borderRadius: 60,\r\n        width: Dimensions.get('window').width * 0.5,\r\n        marginBottom:20\r\n    },\r\n    btnText: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\",\r\n        fontSize:20\r\n    }\r\n});\r\n\r\nexport default ListNotes;"]},"metadata":{},"sourceType":"module"}